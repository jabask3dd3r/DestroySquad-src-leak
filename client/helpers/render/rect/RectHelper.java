/*
 * Decompiled with CFR 0.152.
 */
package org.Destroy.client.helpers.render.rect;

import java.awt.Color;
import net.minecraft.client.renderer.BufferBuilder;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
import org.Destroy.client.helpers.Helper;
import org.lwjgl.opengl.GL11;

public class RectHelper
implements Helper {
    public static long delta = 0L;

    public RectHelper() {
        RectHelper LLLLL\u0445L\u0445L\u0445L\u0445\u0445L;
    }

    public static void drawRoundedRect(double LL\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, double \u0445L\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, double L\u0445\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, double \u0445\u0445\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, float LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L, Color \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L) {
        float L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L = (float)(LL\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L + (double)(LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f + 0.5f));
        float \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L = (float)(\u0445L\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L + (double)(LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f + 0.5f));
        float LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L = (float)(L\u0445\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L - (double)(LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f + 0.5f));
        float \u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L = (float)(\u0445\u0445\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L - (double)(LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f + 0.5f));
        RectHelper.drawRect(L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L, L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + \u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getRGB());
        RectHelper.polygon(LL\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, \u0445L\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L * 2.0f, 360.0, true, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L);
        RectHelper.polygon(LL\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L + (double)LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - (double)LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + 1.2, \u0445L\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L * 2.0f, 360.0, true, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L);
        RectHelper.polygon(LL\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L + (double)LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - (double)LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + 1.2, \u0445L\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L + (double)\u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - (double)LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + 1.0, LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L * 2.0f, 360.0, true, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L);
        RectHelper.polygon(LL\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L, \u0445L\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L + (double)\u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - (double)LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + 1.0, LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L * 2.0f, 360.0, true, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L);
        GL11.glColor4f((float)\u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getRed() / 255.0f, (float)\u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getGreen() / 255.0f, (float)\u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getBlue() / 255.0f, (float)\u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getAlpha() / 255.0f);
        RectHelper.drawRect(L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L - LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f - 0.5f, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + \u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getRGB());
        RectHelper.drawRect(L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f + 0.5f, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + \u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getRGB());
        RectHelper.drawRect(L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L - LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f - 0.5f, L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, \u0445L\u0445\u0445L\u0445L\u0445L\u0445L\u0445\u0445L + (double)\u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - (double)(LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f), \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getRGB());
        RectHelper.drawRect(L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L, L\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LL\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L - LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f, \u0445\u0445LL\u0445\u0445L\u0445L\u0445L\u0445\u0445L + \u0445L\u0445L\u0445\u0445L\u0445L\u0445L\u0445\u0445L + LLLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L / 2.0f + 0.5f, \u0445LLL\u0445\u0445L\u0445L\u0445L\u0445\u0445L.getRGB());
    }

    public static void drawVerticalGradientSmoothRect(float L\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L, float \u0445\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L, float LLL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, float \u0445LL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, int L\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, int \u0445\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L) {
        GL11.glEnable(3042);
        GL11.glEnable(2848);
        gui.drawGradientRect(L\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L, LLL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, \u0445LL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, L\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L);
        GL11.glScalef(0.5f, 0.5f, 0.5f);
        gui.drawGradientRect(L\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f - 1.0f, \u0445\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, L\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, \u0445LL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f - 1.0f, L\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L);
        gui.drawGradientRect(L\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, \u0445\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f - 1.0f, LLL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, \u0445\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, L\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L);
        gui.drawGradientRect(LLL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, \u0445\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, LLL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f + 1.0f, \u0445LL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f - 1.0f, L\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L);
        gui.drawGradientRect(L\u0445\u0445LLL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, \u0445LL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f - 1.0f, LLL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, \u0445LL\u0445LL\u0445\u0445L\u0445L\u0445\u0445L * 2.0f, L\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445LL\u0445\u0445L\u0445L\u0445\u0445L);
        GL11.glDisable(2848);
        GL11.glDisable(3042);
        GL11.glScalef(2.0f, 2.0f, 2.0f);
    }

    public static void drawVerticalGradientRect(float LLL\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, float \u0445LL\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, float L\u0445L\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, float \u0445\u0445L\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, int LL\u0445\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, int \u0445L\u0445\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L) {
        gui.drawGradientRect(LLL\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, \u0445LL\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, L\u0445L\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, LL\u0445\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L, \u0445L\u0445\u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L);
    }

    public static void drawVerticalGradientBetterRect(float L\u0445L\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, float \u0445\u0445L\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, float LL\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, float \u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, int L\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, int \u0445\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L) {
        gui.drawGradientRect(L\u0445L\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, L\u0445L\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L + LL\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445L\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L + \u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, L\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L, \u0445\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L);
    }

    public static void polygon(double LLLLLLLL\u0445\u0445L\u0445\u0445L, double \u0445LLLLLLL\u0445\u0445L\u0445\u0445L, double L\u0445LLLLLL\u0445\u0445L\u0445\u0445L, double \u0445\u0445LLLLLL\u0445\u0445L\u0445\u0445L, boolean LL\u0445LLLLL\u0445\u0445L\u0445\u0445L, Color \u0445L\u0445LLLLL\u0445\u0445L\u0445\u0445L) {
        L\u0445LLLLLL\u0445\u0445L\u0445\u0445L /= 2.0;
        GL11.glEnable(3042);
        GL11.glBlendFunc(770, 771);
        GL11.glDisable(3553);
        GL11.glDisable(2884);
        GlStateManager.disableAlpha();
        GL11.glColor4f((float)\u0445L\u0445LLLLL\u0445\u0445L\u0445\u0445L.getRed() / 255.0f, (float)\u0445L\u0445LLLLL\u0445\u0445L\u0445\u0445L.getGreen() / 255.0f, (float)\u0445L\u0445LLLLL\u0445\u0445L\u0445\u0445L.getBlue() / 255.0f, (float)\u0445L\u0445LLLLL\u0445\u0445L\u0445\u0445L.getAlpha() / 255.0f);
        if (!LL\u0445LLLLL\u0445\u0445L\u0445\u0445L) {
            GL11.glLineWidth(1.0f);
        }
        GL11.glEnable(2848);
        GL11.glBegin(LL\u0445LLLLL\u0445\u0445L\u0445\u0445L ? 6 : 3);
        double \u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L = 0.0;
        if (\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L <= \u0445\u0445LLLLLL\u0445\u0445L\u0445\u0445L) {
            double L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L = \u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L * (Math.PI * 2) / \u0445\u0445LLLLLL\u0445\u0445L\u0445\u0445L;
            GL11.glVertex2d(LLLLLLLL\u0445\u0445L\u0445\u0445L + L\u0445LLLLLL\u0445\u0445L\u0445\u0445L * Math.cos(L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L) + L\u0445LLLLLL\u0445\u0445L\u0445\u0445L, \u0445LLLLLLL\u0445\u0445L\u0445\u0445L + L\u0445LLLLLL\u0445\u0445L\u0445\u0445L * Math.sin(L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L) + L\u0445LLLLLL\u0445\u0445L\u0445\u0445L);
            \u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L += 1.0;
            return;
        }
        GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
        GL11.glEnd();
        GL11.glDisable(2848);
        GlStateManager.enableAlpha();
        GL11.glEnable(2884);
        GL11.glEnable(3553);
        GL11.glDisable(3042);
    }

    public static void drawRectBetter(double \u0445\u0445LL\u0445LLL\u0445\u0445L\u0445\u0445L, double LL\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L, double \u0445L\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L, double L\u0445\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L, int \u0445\u0445\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawRect(\u0445\u0445LL\u0445LLL\u0445\u0445L\u0445\u0445L, LL\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L, \u0445\u0445LL\u0445LLL\u0445\u0445L\u0445\u0445L + \u0445L\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L, LL\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L + L\u0445\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L, \u0445\u0445\u0445L\u0445LLL\u0445\u0445L\u0445\u0445L);
    }

    public static void drawGradientRectBetter(float \u0445\u0445LLL\u0445LL\u0445\u0445L\u0445\u0445L, float LL\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, float \u0445L\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, float L\u0445\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, int \u0445\u0445\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, int LLL\u0445L\u0445LL\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawGradientRect(\u0445\u0445LLL\u0445LL\u0445\u0445L\u0445\u0445L, LL\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, \u0445\u0445LLL\u0445LL\u0445\u0445L\u0445\u0445L + \u0445L\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, LL\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L + L\u0445\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, \u0445\u0445\u0445LL\u0445LL\u0445\u0445L\u0445\u0445L, LLL\u0445L\u0445LL\u0445\u0445L\u0445\u0445L);
    }

    public static void drawSmoothGradientRect(double \u0445L\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L, double L\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L, double \u0445\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L, double LLL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, int \u0445LL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, int L\u0445L\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L) {
        GL11.glEnable(3042);
        GL11.glEnable(2848);
        RectHelper.drawGradientRect(\u0445L\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L, L\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L, \u0445\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L, LLL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, \u0445LL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L);
        GL11.glScalef(0.5f, 0.5f, 0.5f);
        RectHelper.drawGradientRect(\u0445L\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0 - 1.0, L\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, \u0445L\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, LLL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0 - 1.0, \u0445LL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L);
        RectHelper.drawGradientRect(\u0445L\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, L\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0 - 1.0, \u0445\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, L\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, \u0445LL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L);
        RectHelper.drawGradientRect(\u0445\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, L\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, \u0445\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0 + 1.0, LLL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0 - 1.0, \u0445LL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L);
        RectHelper.drawGradientRect(\u0445L\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, LLL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0 - 1.0, \u0445\u0445\u0445L\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, LLL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L * 2.0, \u0445LL\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L);
        GL11.glDisable(2848);
        GL11.glDisable(3042);
        GL11.glScalef(2.0f, 2.0f, 2.0f);
    }

    public static void drawSmoothRectBetter(float L\u0445\u0445LLL\u0445L\u0445\u0445L\u0445\u0445L, float \u0445\u0445\u0445LLL\u0445L\u0445\u0445L\u0445\u0445L, float LLL\u0445LL\u0445L\u0445\u0445L\u0445\u0445L, float \u0445LL\u0445LL\u0445L\u0445\u0445L\u0445\u0445L, int L\u0445L\u0445LL\u0445L\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawSmoothRect(L\u0445\u0445LLL\u0445L\u0445\u0445L\u0445\u0445L, \u0445\u0445\u0445LLL\u0445L\u0445\u0445L\u0445\u0445L, L\u0445\u0445LLL\u0445L\u0445\u0445L\u0445\u0445L + LLL\u0445LL\u0445L\u0445\u0445L\u0445\u0445L, \u0445\u0445\u0445LLL\u0445L\u0445\u0445L\u0445\u0445L + \u0445LL\u0445LL\u0445L\u0445\u0445L\u0445\u0445L, L\u0445L\u0445LL\u0445L\u0445\u0445L\u0445\u0445L);
    }

    public static void drawRect(double \u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, double L\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, double \u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, double LLLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L, int \u0445LLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L) {
        if (\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L < \u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L) {
            double \u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L = \u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L;
            \u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L = \u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L;
            \u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L = \u0445\u0445L\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L;
        }
        if (L\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L < LLLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L) {
            double LL\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L = L\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L;
            L\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L = LLLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L;
            LLLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L = LL\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L;
        }
        float L\u0445LLL\u0445\u0445L\u0445\u0445L\u0445\u0445L = (float)(\u0445LLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L >> 24 & 0xFF) / 255.0f;
        float \u0445\u0445LLL\u0445\u0445L\u0445\u0445L\u0445\u0445L = (float)(\u0445LLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L >> 16 & 0xFF) / 255.0f;
        float LL\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L = (float)(\u0445LLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L >> 8 & 0xFF) / 255.0f;
        float \u0445L\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L = (float)(\u0445LLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L & 0xFF) / 255.0f;
        Tessellator L\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L = Tessellator.getInstance();
        BufferBuilder \u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L = L\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L.getBuffer();
        GlStateManager.enableBlend();
        GlStateManager.disableTexture2D();
        GlStateManager.tryBlendFuncSeparate(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA, GlStateManager.SourceFactor.ONE, GlStateManager.DestFactor.ZERO);
        GlStateManager.color(\u0445\u0445LLL\u0445\u0445L\u0445\u0445L\u0445\u0445L, LL\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L, \u0445L\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L, L\u0445LLL\u0445\u0445L\u0445\u0445L\u0445\u0445L);
        \u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L.begin(7, DefaultVertexFormats.POSITION);
        \u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L.pos(\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, LLLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L, 0.0).endVertex();
        \u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L.pos(\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, LLLLL\u0445\u0445L\u0445\u0445L\u0445\u0445L, 0.0).endVertex();
        \u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L.pos(\u0445\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, L\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, 0.0).endVertex();
        \u0445\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L.pos(\u0445L\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, L\u0445\u0445\u0445\u0445L\u0445L\u0445\u0445L\u0445\u0445L, 0.0).endVertex();
        L\u0445\u0445LL\u0445\u0445L\u0445\u0445L\u0445\u0445L.draw();
        GlStateManager.enableTexture2D();
        GlStateManager.disableBlend();
    }

    public static void drawSmoothRect(float LLL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, float \u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, float L\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, float \u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, int LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L) {
        GL11.glEnable(3042);
        GL11.glEnable(2848);
        RectHelper.drawRect(LLL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, \u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, \u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L, LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L);
        GL11.glScalef(0.5f, 0.5f, 0.5f);
        RectHelper.drawRect(LLL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f - 1.0f, \u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, LLL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, \u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f - 1.0f, LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L);
        RectHelper.drawRect(LLL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, \u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f - 1.0f, L\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, \u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L);
        RectHelper.drawRect(L\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, \u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, L\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f + 1.0f, \u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f - 1.0f, LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L);
        RectHelper.drawRect(LLL\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, \u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f - 1.0f, L\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, \u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L * 2.0f, LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445L);
        GL11.glDisable(2848);
        GL11.glDisable(3042);
        GL11.glScalef(2.0f, 2.0f, 2.0f);
    }

    public static void drawGradientRect(double L\u0445LL\u0445LL\u0445\u0445\u0445L\u0445\u0445L, double \u0445\u0445LL\u0445LL\u0445\u0445\u0445L\u0445\u0445L, double LL\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L, double \u0445L\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L, int L\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L, int \u0445\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L) {
        float LLL\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(L\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L >> 24 & 0xFF) / 255.0f;
        float \u0445LL\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(L\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L >> 16 & 0xFF) / 255.0f;
        float L\u0445L\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(L\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L >> 8 & 0xFF) / 255.0f;
        float \u0445\u0445L\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(L\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L & 0xFF) / 255.0f;
        float LL\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(\u0445\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L >> 24 & 0xFF) / 255.0f;
        float \u0445L\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(\u0445\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L >> 16 & 0xFF) / 255.0f;
        float L\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(\u0445\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L >> 8 & 0xFF) / 255.0f;
        float \u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L = (float)(\u0445\u0445\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L & 0xFF) / 255.0f;
        GlStateManager.disableTexture2D();
        GlStateManager.enableBlend();
        GlStateManager.disableAlpha();
        GlStateManager.tryBlendFuncSeparate(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA, GlStateManager.SourceFactor.ONE, GlStateManager.DestFactor.ZERO);
        GlStateManager.shadeModel(7425);
        Tessellator LLLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L = Tessellator.getInstance();
        BufferBuilder \u0445LLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L = LLLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L.getBuffer();
        \u0445LLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L.begin(7, DefaultVertexFormats.POSITION_COLOR);
        \u0445LLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L.pos(L\u0445LL\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445\u0445LL\u0445LL\u0445\u0445\u0445L\u0445\u0445L, RectHelper.gui.zLevel).color(\u0445LL\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445\u0445L\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, LLL\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L).endVertex();
        \u0445LLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L.pos(L\u0445LL\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445L\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L, RectHelper.gui.zLevel).color(\u0445LL\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, L\u0445L\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445\u0445L\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, LLL\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L).endVertex();
        \u0445LLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L.pos(LL\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445L\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L, RectHelper.gui.zLevel).color(\u0445L\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, L\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, LL\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L).endVertex();
        \u0445LLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L.pos(LL\u0445L\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445\u0445LL\u0445LL\u0445\u0445\u0445L\u0445\u0445L, RectHelper.gui.zLevel).color(\u0445L\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, L\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, \u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L, LL\u0445\u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445L).endVertex();
        LLLLL\u0445L\u0445\u0445\u0445L\u0445\u0445L.draw();
        GlStateManager.shadeModel(7424);
        GlStateManager.disableBlend();
        GlStateManager.enableAlpha();
        GlStateManager.enableTexture2D();
    }

    public static void drawSkeetButton(float L\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L, float \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L, float LLL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L, float \u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawSmoothRect(L\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 31.0f, \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 43.0f, LLL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L + 31.0f, \u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 30.0f, new Color(0, 0, 0, 255).getRGB());
        RectHelper.drawSmoothRect(L\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 30.5f, \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 42.5f, LLL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L + 30.5f, \u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 30.5f, new Color(45, 45, 45, 255).getRGB());
        gui.drawGradientRect((int)L\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 30, (int)\u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 42, LLL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L + 30.0f, \u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445L\u0445\u0445L - 31.0f, new Color(48, 48, 48, 255).getRGB(), new Color(19, 19, 19, 255).getRGB());
    }

    public static void drawSkeetRectWithoutBorder(float L\u0445LLLL\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445\u0445LLLL\u0445\u0445\u0445\u0445L\u0445\u0445L, float LL\u0445LLL\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445L\u0445LLL\u0445\u0445\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawSmoothRect(L\u0445LLLL\u0445\u0445\u0445\u0445L\u0445\u0445L - 41.0f, \u0445\u0445LLLL\u0445\u0445\u0445\u0445L\u0445\u0445L - 61.0f, LL\u0445LLL\u0445\u0445\u0445\u0445L\u0445\u0445L + 41.0f, \u0445L\u0445LLL\u0445\u0445\u0445\u0445L\u0445\u0445L + 61.0f, new Color(48, 48, 48, 255).getRGB());
        RectHelper.drawSmoothRect(L\u0445LLLL\u0445\u0445\u0445\u0445L\u0445\u0445L - 40.0f, \u0445\u0445LLLL\u0445\u0445\u0445\u0445L\u0445\u0445L - 60.0f, LL\u0445LLL\u0445\u0445\u0445\u0445L\u0445\u0445L + 40.0f, \u0445L\u0445LLL\u0445\u0445\u0445\u0445L\u0445\u0445L + 60.0f, new Color(17, 17, 17, 255).getRGB());
    }

    public static void drawSkeetRect(float L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L, float LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawRect(L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 46.5f, \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 66.5f, LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 46.5f, \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 66.5f, new Color(0, 0, 0, 255).getRGB());
        RectHelper.drawRect(L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 46.0f, \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 66.0f, LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 46.0f, \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 66.0f, new Color(48, 48, 48, 255).getRGB());
        RectHelper.drawRect(L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 44.5f, \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 64.5f, LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 44.5f, \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 64.5f, new Color(33, 33, 33, 255).getRGB());
        RectHelper.drawRect(L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 43.5f, \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 63.5f, LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 43.5f, \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 63.5f, new Color(0, 0, 0, 255).getRGB());
        RectHelper.drawRect(L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 43.0f, \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 63.0f, LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 43.0f, \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 63.0f, new Color(9, 9, 9, 255).getRGB());
        RectHelper.drawRect(L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 40.5f, \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 60.5f, LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 40.5f, \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 60.5f, new Color(48, 48, 48, 255).getRGB());
        RectHelper.drawRect(L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 40.0f, \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445L\u0445\u0445L - 60.0f, LLLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 40.0f, \u0445LLL\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + 60.0f, new Color(17, 17, 17, 255).getRGB());
    }

    public static void drawBorderedRect(float L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L, float LLLLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445LLLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, float L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, int \u0445\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, int LL\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, boolean \u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawRect(L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L - (!\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L - (!\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), LLLLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L + (!\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445LLLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L + (!\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), LL\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L);
        RectHelper.drawRect(L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + (\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445L\u0445\u0445L + (\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), LLLLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L - (\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445LLLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L - (\u0445L\u0445LL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445\u0445LLL\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L);
    }

    public static void drawBorder(float L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, float LLL\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, float \u0445LL\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, float L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, int \u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, int LL\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L, boolean \u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L) {
        RectHelper.drawRect(L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L - (!\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L - (!\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), LLL\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L + (!\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445LL\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L + (!\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), LL\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L);
        RectHelper.drawRect(L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L + (\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L + (\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), LLL\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L - (\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445LL\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L - (\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L ? L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L : 0.0f), \u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445L);
    }

    public static void drawOutlineRect(float \u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L, float L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, float \u0445\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, float LLLL\u0445LLLLL\u0445\u0445\u0445L, Color \u0445LLL\u0445LLLLL\u0445\u0445\u0445L, Color L\u0445LL\u0445LLLLL\u0445\u0445\u0445L) {
        RectHelper.drawRect(\u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, \u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L + \u0445\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + LLLL\u0445LLLLL\u0445\u0445\u0445L, \u0445LLL\u0445LLLLL\u0445\u0445\u0445L.getRGB());
        int \u0445\u0445LL\u0445LLLLL\u0445\u0445\u0445L = L\u0445LL\u0445LLLLL\u0445\u0445\u0445L.getRGB();
        RectHelper.drawRect(\u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L - 1.0f, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, \u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + LLLL\u0445LLLLL\u0445\u0445\u0445L, \u0445\u0445LL\u0445LLLLL\u0445\u0445\u0445L);
        RectHelper.drawRect(\u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L + \u0445\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, \u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L + \u0445\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + 1.0f, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + LLLL\u0445LLLLL\u0445\u0445\u0445L, \u0445\u0445LL\u0445LLLLL\u0445\u0445\u0445L);
        RectHelper.drawRect(\u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L - 1.0f, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L - 1.0f, \u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L + \u0445\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + 1.0f, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L, \u0445\u0445LL\u0445LLLLL\u0445\u0445\u0445L);
        RectHelper.drawRect(\u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L - 1.0f, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + LLLL\u0445LLLLL\u0445\u0445\u0445L, \u0445L\u0445\u0445LLLLLL\u0445\u0445\u0445L + \u0445\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + 1.0f, L\u0445\u0445\u0445LLLLLL\u0445\u0445\u0445L + LLLL\u0445LLLLL\u0445\u0445\u0445L + 1.0f, \u0445\u0445LL\u0445LLLLL\u0445\u0445\u0445L);
    }
}

