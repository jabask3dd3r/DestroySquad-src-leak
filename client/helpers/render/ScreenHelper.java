/*
 * Decompiled with CFR 0.152.
 */
package org.Destroy.client.helpers.render;

import net.minecraft.client.Minecraft;
import org.Destroy.client.helpers.math.MathematicHelper;
import org.Destroy.client.helpers.render.AnimationHelper;

public class ScreenHelper {
    private float x;
    private float y;
    private long lastMS;

    public ScreenHelper(float LL\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L, float \u0445L\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L) {
        ScreenHelper \u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L;
        \u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L.x = LL\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L;
        \u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L.y = \u0445L\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L;
        \u0445\u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L.lastMS = System.currentTimeMillis();
    }

    public static double animate(double \u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L, double LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L, double \u0445LLLLLL\u0445\u0445\u0445\u0445LL\u0445L) {
        boolean L\u0445LLLLL\u0445\u0445\u0445\u0445LL\u0445L;
        boolean bl2 = L\u0445LLLLL\u0445\u0445\u0445\u0445LL\u0445L = \u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L > LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L;
        if (\u0445LLLLLL\u0445\u0445\u0445\u0445LL\u0445L < 0.0) {
            \u0445LLLLLL\u0445\u0445\u0445\u0445LL\u0445L = 0.0;
        } else if (\u0445LLLLLL\u0445\u0445\u0445\u0445LL\u0445L > 1.0) {
            \u0445LLLLLL\u0445\u0445\u0445\u0445LL\u0445L = 1.0;
        }
        double \u0445\u0445LLLLL\u0445\u0445\u0445\u0445LL\u0445L = Math.max(\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L, LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L) - Math.min(\u0445\u0445\u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445LL\u0445L, LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L);
        double LL\u0445LLLL\u0445\u0445\u0445\u0445LL\u0445L = \u0445\u0445LLLLL\u0445\u0445\u0445\u0445LL\u0445L * \u0445LLLLLL\u0445\u0445\u0445\u0445LL\u0445L;
        if (LL\u0445LLLL\u0445\u0445\u0445\u0445LL\u0445L < 0.1) {
            LL\u0445LLLL\u0445\u0445\u0445\u0445LL\u0445L = 0.1;
        }
        LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L = L\u0445LLLLL\u0445\u0445\u0445\u0445LL\u0445L ? (LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L += LL\u0445LLLL\u0445\u0445\u0445\u0445LL\u0445L) : (LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L -= LL\u0445LLLL\u0445\u0445\u0445\u0445LL\u0445L);
        return LLLLLLL\u0445\u0445\u0445\u0445LL\u0445L;
    }

    public static double progressiveAnimation(double L\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L, double \u0445\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L, double LL\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L) {
        double \u0445L\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L = Math.abs(L\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L - \u0445\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L);
        int L\u0445\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L = Minecraft.getDebugFPS();
        if (\u0445L\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L > 0.0) {
            double \u0445LLL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L = MathematicHelper.round(Math.min(10.0, Math.max(0.05, 144.0 / (double)L\u0445\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L * (\u0445L\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L / 10.0) * LL\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L)), 0.05);
            if (\u0445L\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L < \u0445LLL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L) {
                \u0445LLL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L = \u0445L\u0445L\u0445LL\u0445\u0445\u0445\u0445LL\u0445L;
            }
            if (L\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L < \u0445\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L) {
                return L\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L + \u0445LLL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L;
            }
            if (L\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L > \u0445\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L) {
                return L\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L - \u0445LLL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L;
            }
        }
        return L\u0445LL\u0445LL\u0445\u0445\u0445\u0445LL\u0445L;
    }

    public static double linearAnimation(double LL\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L, double \u0445L\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L, double L\u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L) {
        double \u0445\u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L = Math.abs(LL\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L - \u0445L\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L);
        int LLL\u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L = Minecraft.getDebugFPS();
        if (\u0445\u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L > 0.0) {
            double \u0445\u0445LLL\u0445L\u0445\u0445\u0445\u0445LL\u0445L = MathematicHelper.round(Math.min(10.0, Math.max(0.005, 144.0 / (double)LLL\u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L * L\u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L)), 0.005);
            if (\u0445\u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L != 0.0 && \u0445\u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L < \u0445\u0445LLL\u0445L\u0445\u0445\u0445\u0445LL\u0445L) {
                \u0445\u0445LLL\u0445L\u0445\u0445\u0445\u0445LL\u0445L = \u0445\u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
            }
            if (LL\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L < \u0445L\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L) {
                return LL\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L + \u0445\u0445LLL\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
            }
            if (LL\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L > \u0445L\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L) {
                return LL\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L - \u0445\u0445LLL\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
            }
        }
        return LL\u0445LL\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
    }

    public void interpolate(float LLL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L, float \u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L, double L\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L) {
        ScreenHelper \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
        long \u0445\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = System.currentTimeMillis();
        long LL\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = \u0445\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L - \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.lastMS;
        \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.lastMS = \u0445\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
        double \u0445L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = 0.0;
        double L\u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = 0.0;
        if (L\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L != 0.0) {
            \u0445L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = (double)(Math.abs(LLL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L - \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.x) * 0.35f) / (10.0 / L\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L);
            L\u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = (double)(Math.abs(\u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L - \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.y) * 0.35f) / (10.0 / L\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L);
        }
        \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.x = AnimationHelper.calculateCompensation(LLL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L, \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.x, LL\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L, \u0445L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L);
        \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.y = AnimationHelper.calculateCompensation(\u0445LL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L, \u0445\u0445\u0445L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L.y, LL\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L, L\u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L);
    }

    public void calculateCompensation(float \u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L, float LLLL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L, float \u0445LLL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L, float L\u0445LL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L) {
        ScreenHelper L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L;
        int \u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L = (int)(Math.abs(\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L - L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L.x) * \u0445LLL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L);
        int LL\u0445L\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L = (int)(Math.abs(LLLL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L - L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L.y) * L\u0445LL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L);
        L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L.x = AnimationHelper.calculateCompensation(\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L, L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L.x, (long)Minecraft.frameTime, \u0445\u0445LL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L);
        L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L.y = AnimationHelper.calculateCompensation(LLLL\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L, L\u0445\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L.y, (long)Minecraft.frameTime, LL\u0445L\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L);
    }

    public float getX() {
        ScreenHelper \u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L;
        return \u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445\u0445LL\u0445L.x;
    }

    public void setX(float L\u0445LLL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L) {
        \u0445LLLL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.x = L\u0445LLL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L;
    }

    public float getY() {
        ScreenHelper L\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L;
        return L\u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.y;
    }

    public void setY(float \u0445\u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L) {
        L\u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.y = \u0445\u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L;
    }
}

