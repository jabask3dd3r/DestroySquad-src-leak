/*
 * Decompiled with CFR 0.152.
 */
package org.Destroy.client.ui.font;

import java.awt.Color;
import java.awt.Font;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.texture.DynamicTexture;
import org.Destroy.client.ui.font.CFont;
import org.lwjgl.opengl.GL11;

public class MCFontRenderer
extends CFont {
    private final int[] colorCode = new int[32];
    protected CFont.CharData[] boldChars = new CFont.CharData[256];
    protected CFont.CharData[] italicChars = new CFont.CharData[256];
    protected CFont.CharData[] boldItalicChars = new CFont.CharData[256];
    protected DynamicTexture texBold;
    protected DynamicTexture texItalic;
    protected DynamicTexture texItalicBold;

    public MCFontRenderer(Font L\u0445LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L, boolean \u0445\u0445LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L, boolean LL\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L) {
        super(L\u0445LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L, \u0445\u0445LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L, LL\u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L);
        MCFontRenderer \u0445LLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L;
        \u0445LLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L.setupBoldItalicIDs();
        int LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L = 0;
        if (LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L < 32) {
            int LL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = (LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L >> 3 & 1) * 85;
            int \u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = (LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L >> 2 & 1) * 170 + LL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
            int L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = (LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L >> 1 & 1) * 170 + LL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
            int \u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L = (LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L & 1) * 170 + LL\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L;
            if (LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L == 6) {
                \u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L += 85;
            }
            if (LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L >= 16) {
                \u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L /= 4;
                L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L /= 4;
                \u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L /= 4;
            }
            \u0445LLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L.colorCode[LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L] = (\u0445L\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L & 0xFF) << 16 | (L\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L & 0xFF) << 8 | \u0445\u0445\u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L & 0xFF;
            ++LLLLL\u0445\u0445\u0445\u0445\u0445LL\u0445L;
            throw null;
        }
    }

    public static void drawStringWithOutline(MCFontRenderer \u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, String LL\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, float \u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, float L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, int \u0445\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L) {
        \u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.drawString(LL\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, \u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L - 0.8f, L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, Color.BLACK.getRGB());
        \u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.drawString(LL\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, \u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L + 0.8f, L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, Color.BLACK.getRGB());
        \u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.drawString(LL\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, \u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L - 0.8f, Color.BLACK.getRGB());
        \u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.drawString(LL\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, \u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L + 0.8f, Color.BLACK.getRGB());
        \u0445\u0445LL\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L.drawString(LL\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, \u0445L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, L\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L, \u0445\u0445\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445L);
    }

    public static void drawStringWithOutline(FontRenderer L\u0445LLLLLLLL\u0445L\u0445L, String \u0445\u0445LLLLLLLL\u0445L\u0445L, float LL\u0445LLLLLLL\u0445L\u0445L, float \u0445L\u0445LLLLLLL\u0445L\u0445L, int L\u0445\u0445LLLLLLL\u0445L\u0445L) {
        L\u0445LLLLLLLL\u0445L\u0445L.drawString(\u0445\u0445LLLLLLLL\u0445L\u0445L, LL\u0445LLLLLLL\u0445L\u0445L - 1.0f, \u0445L\u0445LLLLLLL\u0445L\u0445L, Color.BLACK.getRGB());
        L\u0445LLLLLLLL\u0445L\u0445L.drawString(\u0445\u0445LLLLLLLL\u0445L\u0445L, LL\u0445LLLLLLL\u0445L\u0445L + 1.0f, \u0445L\u0445LLLLLLL\u0445L\u0445L, Color.BLACK.getRGB());
        L\u0445LLLLLLLL\u0445L\u0445L.drawString(\u0445\u0445LLLLLLLL\u0445L\u0445L, LL\u0445LLLLLLL\u0445L\u0445L, \u0445L\u0445LLLLLLL\u0445L\u0445L - 1.0f, Color.BLACK.getRGB());
        L\u0445LLLLLLLL\u0445L\u0445L.drawString(\u0445\u0445LLLLLLLL\u0445L\u0445L, LL\u0445LLLLLLL\u0445L\u0445L, \u0445L\u0445LLLLLLL\u0445L\u0445L + 1.0f, Color.BLACK.getRGB());
        L\u0445LLLLLLLL\u0445L\u0445L.drawString(\u0445\u0445LLLLLLLL\u0445L\u0445L, LL\u0445LLLLLLL\u0445L\u0445L, \u0445L\u0445LLLLLLL\u0445L\u0445L, L\u0445\u0445LLLLLLL\u0445L\u0445L);
    }

    public static void drawCenteredStringWithOutline(FontRenderer \u0445LLL\u0445LLLLL\u0445L\u0445L, String L\u0445LL\u0445LLLLL\u0445L\u0445L, float \u0445\u0445LL\u0445LLLLL\u0445L\u0445L, float LL\u0445L\u0445LLLLL\u0445L\u0445L, int \u0445L\u0445L\u0445LLLLL\u0445L\u0445L) {
        \u0445LLL\u0445LLLLL\u0445L\u0445L.drawCenteredString(L\u0445LL\u0445LLLLL\u0445L\u0445L, \u0445\u0445LL\u0445LLLLL\u0445L\u0445L - 1.0f, LL\u0445L\u0445LLLLL\u0445L\u0445L, Color.BLACK.getRGB());
        \u0445LLL\u0445LLLLL\u0445L\u0445L.drawCenteredString(L\u0445LL\u0445LLLLL\u0445L\u0445L, \u0445\u0445LL\u0445LLLLL\u0445L\u0445L + 1.0f, LL\u0445L\u0445LLLLL\u0445L\u0445L, Color.BLACK.getRGB());
        \u0445LLL\u0445LLLLL\u0445L\u0445L.drawCenteredString(L\u0445LL\u0445LLLLL\u0445L\u0445L, \u0445\u0445LL\u0445LLLLL\u0445L\u0445L, LL\u0445L\u0445LLLLL\u0445L\u0445L - 1.0f, Color.BLACK.getRGB());
        \u0445LLL\u0445LLLLL\u0445L\u0445L.drawCenteredString(L\u0445LL\u0445LLLLL\u0445L\u0445L, \u0445\u0445LL\u0445LLLLL\u0445L\u0445L, LL\u0445L\u0445LLLLL\u0445L\u0445L + 1.0f, Color.BLACK.getRGB());
        \u0445LLL\u0445LLLLL\u0445L\u0445L.drawCenteredString(L\u0445LL\u0445LLLLL\u0445L\u0445L, \u0445\u0445LL\u0445LLLLL\u0445L\u0445L, LL\u0445L\u0445LLLLL\u0445L\u0445L, \u0445L\u0445L\u0445LLLLL\u0445L\u0445L);
    }

    public static float drawCenteredStringWithShadow(FontRenderer LLLLL\u0445LLLL\u0445L\u0445L, String \u0445LLLL\u0445LLLL\u0445L\u0445L, float L\u0445LLL\u0445LLLL\u0445L\u0445L, float \u0445\u0445LLL\u0445LLLL\u0445L\u0445L, int LL\u0445LL\u0445LLLL\u0445L\u0445L) {
        return LLLLL\u0445LLLL\u0445L\u0445L.drawString(\u0445LLLL\u0445LLLL\u0445L\u0445L, L\u0445LLL\u0445LLLL\u0445L\u0445L - (float)(LLLLL\u0445LLLL\u0445L\u0445L.getStringWidth(\u0445LLLL\u0445LLLL\u0445L\u0445L) / 2), \u0445\u0445LLL\u0445LLLL\u0445L\u0445L, LL\u0445LL\u0445LLLL\u0445L\u0445L);
    }

    public void drawCenteredStringWithOutline(MCFontRenderer LLLL\u0445\u0445LLLL\u0445L\u0445L, String \u0445LLL\u0445\u0445LLLL\u0445L\u0445L, float L\u0445LL\u0445\u0445LLLL\u0445L\u0445L, float \u0445\u0445LL\u0445\u0445LLLL\u0445L\u0445L, int LL\u0445L\u0445\u0445LLLL\u0445L\u0445L) {
        MCFontRenderer \u0445\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445L;
        \u0445\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445L.drawCenteredString(\u0445LLL\u0445\u0445LLLL\u0445L\u0445L, L\u0445LL\u0445\u0445LLLL\u0445L\u0445L - 1.0f, \u0445\u0445LL\u0445\u0445LLLL\u0445L\u0445L, Color.BLACK.getRGB());
        \u0445\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445L.drawCenteredString(\u0445LLL\u0445\u0445LLLL\u0445L\u0445L, L\u0445LL\u0445\u0445LLLL\u0445L\u0445L + 1.0f, \u0445\u0445LL\u0445\u0445LLLL\u0445L\u0445L, Color.BLACK.getRGB());
        \u0445\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445L.drawCenteredString(\u0445LLL\u0445\u0445LLLL\u0445L\u0445L, L\u0445LL\u0445\u0445LLLL\u0445L\u0445L, \u0445\u0445LL\u0445\u0445LLLL\u0445L\u0445L - 1.0f, Color.BLACK.getRGB());
        \u0445\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445L.drawCenteredString(\u0445LLL\u0445\u0445LLLL\u0445L\u0445L, L\u0445LL\u0445\u0445LLLL\u0445L\u0445L, \u0445\u0445LL\u0445\u0445LLLL\u0445L\u0445L + 1.0f, Color.BLACK.getRGB());
        \u0445\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445L.drawCenteredString(\u0445LLL\u0445\u0445LLLL\u0445L\u0445L, L\u0445LL\u0445\u0445LLLL\u0445L\u0445L, \u0445\u0445LL\u0445\u0445LLLL\u0445L\u0445L, LL\u0445L\u0445\u0445LLLL\u0445L\u0445L);
    }

    public float drawStringWithShadow(String \u0445LLLLL\u0445LLL\u0445L\u0445L, double L\u0445LLLL\u0445LLL\u0445L\u0445L, double \u0445\u0445LLLL\u0445LLL\u0445L\u0445L, int LL\u0445LLL\u0445LLL\u0445L\u0445L) {
        MCFontRenderer LLLLLL\u0445LLL\u0445L\u0445L;
        float \u0445L\u0445LLL\u0445LLL\u0445L\u0445L = LLLLLL\u0445LLL\u0445L\u0445L.drawString(\u0445LLLLL\u0445LLL\u0445L\u0445L, L\u0445LLLL\u0445LLL\u0445L\u0445L + 0.9, \u0445\u0445LLLL\u0445LLL\u0445L\u0445L + 0.7, LL\u0445LLL\u0445LLL\u0445L\u0445L, true);
        return Math.max(\u0445L\u0445LLL\u0445LLL\u0445L\u0445L, LLLLLL\u0445LLL\u0445L\u0445L.drawString(\u0445LLLLL\u0445LLL\u0445L\u0445L, L\u0445LLLL\u0445LLL\u0445L\u0445L, \u0445\u0445LLLL\u0445LLL\u0445L\u0445L, LL\u0445LLL\u0445LLL\u0445L\u0445L, false));
    }

    public float drawString(String L\u0445LL\u0445L\u0445LLL\u0445L\u0445L, float \u0445\u0445LL\u0445L\u0445LLL\u0445L\u0445L, float LL\u0445L\u0445L\u0445LLL\u0445L\u0445L, int \u0445L\u0445L\u0445L\u0445LLL\u0445L\u0445L) {
        MCFontRenderer \u0445LLL\u0445L\u0445LLL\u0445L\u0445L;
        return \u0445LLL\u0445L\u0445LLL\u0445L\u0445L.drawString(L\u0445LL\u0445L\u0445LLL\u0445L\u0445L, \u0445\u0445LL\u0445L\u0445LLL\u0445L\u0445L, LL\u0445L\u0445L\u0445LLL\u0445L\u0445L, \u0445L\u0445L\u0445L\u0445LLL\u0445L\u0445L, false);
    }

    public float drawCenteredString(String \u0445LLLL\u0445\u0445LLL\u0445L\u0445L, float L\u0445LLL\u0445\u0445LLL\u0445L\u0445L, float \u0445\u0445LLL\u0445\u0445LLL\u0445L\u0445L, int LL\u0445LL\u0445\u0445LLL\u0445L\u0445L) {
        MCFontRenderer LLLLL\u0445\u0445LLL\u0445L\u0445L;
        return LLLLL\u0445\u0445LLL\u0445L\u0445L.drawString(\u0445LLLL\u0445\u0445LLL\u0445L\u0445L, L\u0445LLL\u0445\u0445LLL\u0445L\u0445L - (float)LLLLL\u0445\u0445LLL\u0445L\u0445L.getStringWidth(\u0445LLLL\u0445\u0445LLL\u0445L\u0445L) / 2.0f, \u0445\u0445LLL\u0445\u0445LLL\u0445L\u0445L, LL\u0445LL\u0445\u0445LLL\u0445L\u0445L);
    }

    public float drawCenteredStringWithShadow(String LLLL\u0445\u0445\u0445LLL\u0445L\u0445L, float \u0445LLL\u0445\u0445\u0445LLL\u0445L\u0445L, float L\u0445LL\u0445\u0445\u0445LLL\u0445L\u0445L, int \u0445\u0445LL\u0445\u0445\u0445LLL\u0445L\u0445L) {
        MCFontRenderer \u0445\u0445\u0445\u0445L\u0445\u0445LLL\u0445L\u0445L;
        return \u0445\u0445\u0445\u0445L\u0445\u0445LLL\u0445L\u0445L.drawString(LLLL\u0445\u0445\u0445LLL\u0445L\u0445L, \u0445LLL\u0445\u0445\u0445LLL\u0445L\u0445L - (float)(\u0445\u0445\u0445\u0445L\u0445\u0445LLL\u0445L\u0445L.getStringWidth(LLLL\u0445\u0445\u0445LLL\u0445L\u0445L) / 2), L\u0445LL\u0445\u0445\u0445LLL\u0445L\u0445L, \u0445\u0445LL\u0445\u0445\u0445LLL\u0445L\u0445L);
    }

    public float drawString(String \u0445\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L, double LLLL\u0445LL\u0445LL\u0445L\u0445L, double \u0445LLL\u0445LL\u0445LL\u0445L\u0445L, int L\u0445LL\u0445LL\u0445LL\u0445L\u0445L, boolean \u0445\u0445LL\u0445LL\u0445LL\u0445L\u0445L) {
        MCFontRenderer L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L;
        LLLL\u0445LL\u0445LL\u0445L\u0445L -= 1.0;
        if (L\u0445LL\u0445LL\u0445LL\u0445L\u0445L == 0x20FFFFFF) {
            L\u0445LL\u0445LL\u0445LL\u0445L\u0445L = 0xFFFFFF;
        }
        if ((L\u0445LL\u0445LL\u0445LL\u0445L\u0445L & 0xFC000000) == 0) {
            L\u0445LL\u0445LL\u0445LL\u0445L\u0445L |= 0xFF000000;
        }
        if (\u0445\u0445LL\u0445LL\u0445LL\u0445L\u0445L) {
            L\u0445LL\u0445LL\u0445LL\u0445L\u0445L = (L\u0445LL\u0445LL\u0445LL\u0445L\u0445L & 0xFCFCFC) >> 2 | L\u0445LL\u0445LL\u0445LL\u0445L\u0445L & new Color(20, 20, 20, 200).getRGB();
        }
        CFont.CharData[] LL\u0445L\u0445LL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.charData;
        float \u0445L\u0445L\u0445LL\u0445LL\u0445L\u0445L = (float)(L\u0445LL\u0445LL\u0445LL\u0445L\u0445L >> 24 & 0xFF) / 255.0f;
        boolean L\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = false;
        boolean \u0445\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = false;
        boolean LLL\u0445\u0445LL\u0445LL\u0445L\u0445L = false;
        boolean \u0445LL\u0445\u0445LL\u0445LL\u0445L\u0445L = false;
        LLLL\u0445LL\u0445LL\u0445L\u0445L *= 2.0;
        \u0445LLL\u0445LL\u0445LL\u0445L\u0445L = (\u0445LLL\u0445LL\u0445LL\u0445L\u0445L - 3.0) * 2.0;
        GL11.glPushMatrix();
        GlStateManager.scale(0.5, 0.5, 0.5);
        GlStateManager.enableBlend();
        GlStateManager.blendFunc(770, 771);
        GlStateManager.color((float)(L\u0445LL\u0445LL\u0445LL\u0445L\u0445L >> 16 & 0xFF) / 255.0f, (float)(L\u0445LL\u0445LL\u0445LL\u0445L\u0445L >> 8 & 0xFF) / 255.0f, (float)(L\u0445LL\u0445LL\u0445LL\u0445L\u0445L & 0xFF) / 255.0f, \u0445L\u0445L\u0445LL\u0445LL\u0445L\u0445L);
        int L\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L = \u0445\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.length();
        GlStateManager.enableTexture2D();
        GlStateManager.bindTexture(L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.tex.getGlTextureId());
        GL11.glBindTexture(3553, L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.tex.getGlTextureId());
        int \u0445\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L = 0;
        if (\u0445\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L < L\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L) {
            char \u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L = \u0445\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.charAt(\u0445\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L);
            if (\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L == '\u00a7') {
                int LL\u0445\u0445LLL\u0445LL\u0445L\u0445L = 21;
                try {
                    LL\u0445\u0445LLL\u0445LL\u0445L\u0445L = "0123456789abcdefklmnor".indexOf(\u0445\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.charAt(\u0445\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L + 1));
                }
                catch (Exception L\u0445L\u0445LLL\u0445LL\u0445L\u0445L) {
                    L\u0445L\u0445LLL\u0445LL\u0445L\u0445L.printStackTrace();
                }
                if (LL\u0445\u0445LLL\u0445LL\u0445L\u0445L < 16) {
                    L\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = false;
                    \u0445\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = false;
                    \u0445LL\u0445\u0445LL\u0445LL\u0445L\u0445L = false;
                    LLL\u0445\u0445LL\u0445LL\u0445L\u0445L = false;
                    GlStateManager.bindTexture(L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.tex.getGlTextureId());
                    LL\u0445L\u0445LL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.charData;
                    if (LL\u0445\u0445LLL\u0445LL\u0445L\u0445L < 0) {
                        LL\u0445\u0445LLL\u0445LL\u0445L\u0445L = 15;
                    }
                    if (\u0445\u0445LL\u0445LL\u0445LL\u0445L\u0445L) {
                        LL\u0445\u0445LLL\u0445LL\u0445L\u0445L += 16;
                    }
                    int \u0445\u0445L\u0445LLL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.colorCode[LL\u0445\u0445LLL\u0445LL\u0445L\u0445L];
                    GlStateManager.color((float)(\u0445\u0445L\u0445LLL\u0445LL\u0445L\u0445L >> 16 & 0xFF) / 255.0f, (float)(\u0445\u0445L\u0445LLL\u0445LL\u0445L\u0445L >> 8 & 0xFF) / 255.0f, (float)(\u0445\u0445L\u0445LLL\u0445LL\u0445L\u0445L & 0xFF) / 255.0f, \u0445L\u0445L\u0445LL\u0445LL\u0445L\u0445L);
                } else if (LL\u0445\u0445LLL\u0445LL\u0445L\u0445L == 17) {
                    L\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = true;
                    if (\u0445\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L) {
                        GlStateManager.bindTexture(L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.texItalicBold.getGlTextureId());
                        LL\u0445L\u0445LL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.boldItalicChars;
                    } else {
                        GlStateManager.bindTexture(L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.texBold.getGlTextureId());
                        LL\u0445L\u0445LL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.boldChars;
                    }
                } else if (LL\u0445\u0445LLL\u0445LL\u0445L\u0445L == 18) {
                    LLL\u0445\u0445LL\u0445LL\u0445L\u0445L = true;
                } else if (LL\u0445\u0445LLL\u0445LL\u0445L\u0445L == 19) {
                    \u0445LL\u0445\u0445LL\u0445LL\u0445L\u0445L = true;
                } else if (LL\u0445\u0445LLL\u0445LL\u0445L\u0445L == 20) {
                    \u0445\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = true;
                    if (L\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L) {
                        GlStateManager.bindTexture(L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.texItalicBold.getGlTextureId());
                        LL\u0445L\u0445LL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.boldItalicChars;
                    } else {
                        GlStateManager.bindTexture(L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.texItalic.getGlTextureId());
                        LL\u0445L\u0445LL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.italicChars;
                    }
                } else if (LL\u0445\u0445LLL\u0445LL\u0445L\u0445L == 21) {
                    L\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = false;
                    \u0445\u0445\u0445L\u0445LL\u0445LL\u0445L\u0445L = false;
                    \u0445LL\u0445\u0445LL\u0445LL\u0445L\u0445L = false;
                    LLL\u0445\u0445LL\u0445LL\u0445L\u0445L = false;
                    GlStateManager.color((float)(L\u0445LL\u0445LL\u0445LL\u0445L\u0445L >> 16 & 0xFF) / 255.0f, (float)(L\u0445LL\u0445LL\u0445LL\u0445L\u0445L >> 8 & 0xFF) / 255.0f, (float)(L\u0445LL\u0445LL\u0445LL\u0445L\u0445L & 0xFF) / 255.0f, \u0445L\u0445L\u0445LL\u0445LL\u0445L\u0445L);
                    GlStateManager.bindTexture(L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.tex.getGlTextureId());
                    LL\u0445L\u0445LL\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.charData;
                }
                ++\u0445\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L;
            } else if (\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L < LL\u0445L\u0445LL\u0445LL\u0445L\u0445L.length) {
                GL11.glBegin(4);
                L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.drawChar(LL\u0445L\u0445LL\u0445LL\u0445L\u0445L, \u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L, (float)LLLL\u0445LL\u0445LL\u0445L\u0445L, (float)\u0445LLL\u0445LL\u0445LL\u0445L\u0445L);
                GL11.glEnd();
                if (LLL\u0445\u0445LL\u0445LL\u0445L\u0445L) {
                    L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.drawLine(LLLL\u0445LL\u0445LL\u0445L\u0445L, \u0445LLL\u0445LL\u0445LL\u0445L\u0445L + (double)((float)LL\u0445L\u0445LL\u0445LL\u0445L\u0445L[\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L].height / 2.0f), LLLL\u0445LL\u0445LL\u0445L\u0445L + (double)LL\u0445L\u0445LL\u0445LL\u0445L\u0445L[\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L].width - 8.0, \u0445LLL\u0445LL\u0445LL\u0445L\u0445L + (double)((float)LL\u0445L\u0445LL\u0445LL\u0445L\u0445L[\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L].height / 2.0f), 1.0f);
                }
                if (\u0445LL\u0445\u0445LL\u0445LL\u0445L\u0445L) {
                    L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.drawLine(LLLL\u0445LL\u0445LL\u0445L\u0445L, \u0445LLL\u0445LL\u0445LL\u0445L\u0445L + (double)LL\u0445L\u0445LL\u0445LL\u0445L\u0445L[\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L].height - 2.0, LLLL\u0445LL\u0445LL\u0445L\u0445L + (double)LL\u0445L\u0445LL\u0445LL\u0445L\u0445L[\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L].width - 8.0, \u0445LLL\u0445LL\u0445LL\u0445L\u0445L + (double)LL\u0445L\u0445LL\u0445LL\u0445L\u0445L[\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L].height - 2.0, 1.0f);
                }
                LLLL\u0445LL\u0445LL\u0445L\u0445L += (double)(LL\u0445L\u0445LL\u0445LL\u0445L\u0445L[\u0445L\u0445\u0445LLL\u0445LL\u0445L\u0445L].width - 8 + L\u0445\u0445\u0445LLL\u0445LL\u0445L\u0445L.charOffset);
            }
            ++\u0445\u0445L\u0445\u0445LL\u0445LL\u0445L\u0445L;
            return 0.0f;
        }
        GL11.glPopMatrix();
        return (float)(LLLL\u0445LL\u0445LL\u0445L\u0445L / 2.0);
    }

    @Override
    public int getStringWidth(String L\u0445L\u0445\u0445\u0445L\u0445LL\u0445L\u0445L) {
        MCFontRenderer \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L;
        int \u0445\u0445L\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = 0;
        CFont.CharData[] LL\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.charData;
        boolean \u0445L\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = false;
        boolean L\u0445\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = false;
        int LLLLLL\u0445\u0445LL\u0445L\u0445L = 0;
        int \u0445\u0445\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = L\u0445L\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.length();
        if (LLLLLL\u0445\u0445LL\u0445L\u0445L < \u0445\u0445\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L) {
            char LLL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = L\u0445L\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.charAt(LLLLLL\u0445\u0445LL\u0445L\u0445L);
            if (String.valueOf(LLL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L).equals("\u00a7")) {
                int \u0445\u0445\u0445L\u0445\u0445L\u0445LL\u0445L\u0445L = "0123456789abcdefklmnor".indexOf(LLL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L);
                if (\u0445\u0445\u0445L\u0445\u0445L\u0445LL\u0445L\u0445L < 16) {
                    \u0445L\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = false;
                    L\u0445\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = false;
                } else if (\u0445\u0445\u0445L\u0445\u0445L\u0445LL\u0445L\u0445L == 17) {
                    \u0445L\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = true;
                    LL\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = L\u0445\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L ? \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.boldItalicChars : \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.boldChars;
                } else if (\u0445\u0445\u0445L\u0445\u0445L\u0445LL\u0445L\u0445L == 20) {
                    L\u0445\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = true;
                    LL\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = \u0445L\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L ? \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.boldItalicChars : \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.italicChars;
                } else if (\u0445\u0445\u0445L\u0445\u0445L\u0445LL\u0445L\u0445L == 21) {
                    \u0445L\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = false;
                    L\u0445\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = false;
                    LL\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L = \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.charData;
                }
                ++LLLLLL\u0445\u0445LL\u0445L\u0445L;
            } else if (LLL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L < LL\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.length) {
                \u0445\u0445L\u0445\u0445\u0445L\u0445LL\u0445L\u0445L += LL\u0445\u0445\u0445\u0445L\u0445LL\u0445L\u0445L[LLL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L].width - 8 + \u0445LL\u0445\u0445\u0445L\u0445LL\u0445L\u0445L.charOffset;
            }
            ++LLLLLL\u0445\u0445LL\u0445L\u0445L;
            return 0;
        }
        return \u0445\u0445L\u0445\u0445\u0445L\u0445LL\u0445L\u0445L / 2;
    }

    @Override
    public void setFont(Font L\u0445\u0445\u0445LL\u0445\u0445LL\u0445L\u0445L) {
        MCFontRenderer \u0445L\u0445\u0445LL\u0445\u0445LL\u0445L\u0445L;
        super.setFont(L\u0445\u0445\u0445LL\u0445\u0445LL\u0445L\u0445L);
        \u0445L\u0445\u0445LL\u0445\u0445LL\u0445L\u0445L.setupBoldItalicIDs();
    }

    @Override
    public void setAntiAlias(boolean LL\u0445L\u0445L\u0445\u0445LL\u0445L\u0445L) {
        MCFontRenderer \u0445\u0445LL\u0445L\u0445\u0445LL\u0445L\u0445L;
        super.setAntiAlias(LL\u0445L\u0445L\u0445\u0445LL\u0445L\u0445L);
        \u0445\u0445LL\u0445L\u0445\u0445LL\u0445L\u0445L.setupBoldItalicIDs();
    }

    @Override
    public void setFractionalMetrics(boolean L\u0445L\u0445\u0445L\u0445\u0445LL\u0445L\u0445L) {
        MCFontRenderer \u0445LL\u0445\u0445L\u0445\u0445LL\u0445L\u0445L;
        super.setFractionalMetrics(L\u0445L\u0445\u0445L\u0445\u0445LL\u0445L\u0445L);
        \u0445LL\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.setupBoldItalicIDs();
    }

    private void setupBoldItalicIDs() {
        MCFontRenderer L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L;
        L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.texBold = L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.setupTexture(L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.font.deriveFont(1), L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.antiAlias, L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.fractionalMetrics, L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.boldChars);
        L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.texItalic = L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.setupTexture(L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.font.deriveFont(2), L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.antiAlias, L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.fractionalMetrics, L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.italicChars);
        L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.texItalicBold = L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.setupTexture(L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.font.deriveFont(3), L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.antiAlias, L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.fractionalMetrics, L\u0445\u0445\u0445\u0445L\u0445\u0445LL\u0445L\u0445L.boldItalicChars);
    }

    private void drawLine(double L\u0445\u0445LL\u0445\u0445\u0445LL\u0445L\u0445L, double \u0445\u0445\u0445LL\u0445\u0445\u0445LL\u0445L\u0445L, double LLL\u0445L\u0445\u0445\u0445LL\u0445L\u0445L, double \u0445LL\u0445L\u0445\u0445\u0445LL\u0445L\u0445L, float L\u0445L\u0445L\u0445\u0445\u0445LL\u0445L\u0445L) {
        GL11.glDisable(3553);
        GL11.glLineWidth(L\u0445L\u0445L\u0445\u0445\u0445LL\u0445L\u0445L);
        GL11.glBegin(1);
        GL11.glVertex2d(L\u0445\u0445LL\u0445\u0445\u0445LL\u0445L\u0445L, \u0445\u0445\u0445LL\u0445\u0445\u0445LL\u0445L\u0445L);
        GL11.glVertex2d(LLL\u0445L\u0445\u0445\u0445LL\u0445L\u0445L, \u0445LL\u0445L\u0445\u0445\u0445LL\u0445L\u0445L);
        GL11.glEnd();
        GL11.glEnable(3553);
    }

    public void drawStringWithOutline(String L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, double \u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, double LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L, int \u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L) {
        MCFontRenderer \u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L;
        \u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L.drawString(L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, \u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L - 0.5, LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L, Color.BLACK.getRGB(), false);
        \u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L.drawString(L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, \u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L + 0.5, LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L, Color.BLACK.getRGB(), false);
        \u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L.drawString(L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, \u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L - 0.5, Color.BLACK.getRGB(), false);
        \u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L.drawString(L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, \u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L + 0.5, Color.BLACK.getRGB(), false);
        \u0445L\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L.drawString(L\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, \u0445\u0445\u0445L\u0445\u0445\u0445\u0445LL\u0445L\u0445L, LLL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L, \u0445LL\u0445\u0445\u0445\u0445\u0445LL\u0445L\u0445L, false);
    }

    public void drawCenteredStringWithOutline(String \u0445L\u0445LLLLL\u0445L\u0445L\u0445L, float L\u0445\u0445LLLLL\u0445L\u0445L\u0445L, float \u0445\u0445\u0445LLLLL\u0445L\u0445L\u0445L, int LLL\u0445LLLL\u0445L\u0445L\u0445L) {
        MCFontRenderer LL\u0445LLLLL\u0445L\u0445L\u0445L;
        LL\u0445LLLLL\u0445L\u0445L\u0445L.drawCenteredString(\u0445L\u0445LLLLL\u0445L\u0445L\u0445L, L\u0445\u0445LLLLL\u0445L\u0445L\u0445L - 0.5f, \u0445\u0445\u0445LLLLL\u0445L\u0445L\u0445L, Color.BLACK.getRGB());
        LL\u0445LLLLL\u0445L\u0445L\u0445L.drawCenteredString(\u0445L\u0445LLLLL\u0445L\u0445L\u0445L, L\u0445\u0445LLLLL\u0445L\u0445L\u0445L + 0.5f, \u0445\u0445\u0445LLLLL\u0445L\u0445L\u0445L, Color.BLACK.getRGB());
        LL\u0445LLLLL\u0445L\u0445L\u0445L.drawCenteredString(\u0445L\u0445LLLLL\u0445L\u0445L\u0445L, L\u0445\u0445LLLLL\u0445L\u0445L\u0445L, \u0445\u0445\u0445LLLLL\u0445L\u0445L\u0445L - 0.5f, Color.BLACK.getRGB());
        LL\u0445LLLLL\u0445L\u0445L\u0445L.drawCenteredString(\u0445L\u0445LLLLL\u0445L\u0445L\u0445L, L\u0445\u0445LLLLL\u0445L\u0445L\u0445L, \u0445\u0445\u0445LLLLL\u0445L\u0445L\u0445L + 0.5f, Color.BLACK.getRGB());
        LL\u0445LLLLL\u0445L\u0445L\u0445L.drawCenteredString(\u0445L\u0445LLLLL\u0445L\u0445L\u0445L, L\u0445\u0445LLLLL\u0445L\u0445L\u0445L, \u0445\u0445\u0445LLLLL\u0445L\u0445L\u0445L, LLL\u0445LLLL\u0445L\u0445L\u0445L);
    }
}

