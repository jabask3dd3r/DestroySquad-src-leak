/*
 * Decompiled with CFR 0.152.
 */
package org.Destroy.client.feature.impl.visual;

import java.awt.Color;
import org.Destroy.client.event.EventTarget;
import org.Destroy.client.event.events.impl.render.EventRender2D;
import org.Destroy.client.feature.Feature;
import org.Destroy.client.feature.impl.Type;
import org.Destroy.client.helpers.player.MovementHelper;
import org.Destroy.client.helpers.render.rect.RectHelper;
import org.Destroy.client.settings.impl.BooleanSetting;
import org.Destroy.client.settings.impl.ColorSetting;
import org.Destroy.client.settings.impl.ListSetting;
import org.Destroy.client.settings.impl.NumberSetting;

public class Crosshair
extends Feature {
    public static ColorSetting colorGlobal;
    public static ListSetting crosshairMode;
    public BooleanSetting dynamic;
    public NumberSetting width;
    public NumberSetting gap;
    public NumberSetting length;
    public NumberSetting dynamicGap;

    public Crosshair() {
        super("Crosshair", "\nChanges your aim", Type.Visuals);
        Crosshair L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L;
        crosshairMode = new ListSetting("Crosshair Mode", "Smooth", () -> true, "Smooth", "Border", "Rect");
        L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.dynamic = new BooleanSetting("Dynamic", false, () -> true);
        L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.dynamicGap = new NumberSetting("Dynamic Gap", 3.0f, 1.0f, 20.0f, 1.0f, L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.dynamic::getBoolValue);
        L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.gap = new NumberSetting("Gap", 2.0f, 0.0f, 10.0f, 0.1f, () -> true);
        colorGlobal = new ColorSetting("Crosshair Color", new Color(0xFFFFFF).getRGB(), () -> true);
        L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.width = new NumberSetting("Width", 1.0f, 0.0f, 8.0f, 1.0f, () -> true);
        L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.length = new NumberSetting("Length", 3.0f, 0.5f, 30.0f, 1.0f, () -> true);
        L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.addSettings(crosshairMode, L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.dynamic, L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.dynamicGap, L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.gap, colorGlobal, L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.width, L\u0445L\u0445\u0445\u0445\u0445\u0445\u0445LL\u0445\u0445\u0445L.length);
    }

    @EventTarget
    public void onRender2D(EventRender2D \u0445\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L) {
        Crosshair L\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L;
        int LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L = colorGlobal.getColorValue();
        float \u0445L\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L = \u0445\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.getResolution().getScaledWidth();
        float L\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L = \u0445\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.getResolution().getScaledHeight();
        float \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L = \u0445L\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L / 2.0f;
        float LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L = L\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L / 2.0f;
        boolean \u0445LLL\u0445LLLL\u0445L\u0445\u0445\u0445L = L\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.dynamic.getBoolValue();
        float L\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L = L\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.dynamicGap.getNumberValue();
        float \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L = L\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.width.getNumberValue();
        float LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L = L\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.length.getNumberValue();
        boolean \u0445L\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L = \u0445LLL\u0445LLLL\u0445L\u0445\u0445\u0445L && MovementHelper.isMoving();
        float L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L = \u0445L\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L ? L\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L : L\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.gap.getNumberValue();
        String \u0445\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L = crosshairMode.getOptions();
        L\u0445L\u0445LLLLL\u0445L\u0445\u0445\u0445L.setSuffix(\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L);
        if (\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L.equalsIgnoreCase("Smooth")) {
            RectHelper.drawSmoothRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L - LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
            RectHelper.drawSmoothRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L + LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
            RectHelper.drawSmoothRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L - LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
            RectHelper.drawSmoothRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L + LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
        } else if (\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L.equalsIgnoreCase("Border")) {
            RectHelper.drawBorderedRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L - LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, 0.5f, Color.WHITE.getRGB(), LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L, true);
            RectHelper.drawBorderedRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L + LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, 0.5f, Color.WHITE.getRGB(), LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L, true);
            RectHelper.drawBorderedRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L - LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, 0.5f, Color.WHITE.getRGB(), LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L, true);
            RectHelper.drawBorderedRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L + LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, 0.5f, Color.WHITE.getRGB(), LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L, true);
        } else if (\u0445\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L.equalsIgnoreCase("Rect")) {
            RectHelper.drawRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L - LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
            RectHelper.drawRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L + LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
            RectHelper.drawRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L - LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L - L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
            RectHelper.drawRect(\u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L - \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, \u0445\u0445\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L + \u0445\u0445LL\u0445LLLL\u0445L\u0445\u0445\u0445L / 2.0f, LLLL\u0445LLLL\u0445L\u0445\u0445\u0445L + L\u0445\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L + LL\u0445L\u0445LLLL\u0445L\u0445\u0445\u0445L, LL\u0445\u0445LLLLL\u0445L\u0445\u0445\u0445L);
        }
    }
}

